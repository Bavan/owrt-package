From 0bb166be5e8432246ca9a00fe5232325a76cacf8 Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Mon, 4 Nov 2013 15:56:53 +0100
Subject: [PATCH 97/97] MINOR: tcp: don't use tick_add_ifset() when timeout is
 known to be set

These two useless tests propably result from a copy-paste. The test is
performed in the condition to enter the block.
---
 src/proto_tcp.c | 4 ++--
 1 file changed, 2 insertions(+), 2 deletions(-)

diff --git a/src/proto_tcp.c b/src/proto_tcp.c
index 0f1dc37..1a68cfd 100644
--- a/src/proto_tcp.c
+++ b/src/proto_tcp.c
@@ -912,7 +912,7 @@ int tcp_inspect_request(struct session *s, struct channel *req, int an_bit)
 				channel_dont_connect(req);
 				/* just set the request timeout once at the beginning of the request */
 				if (!tick_isset(req->analyse_exp) && s->be->tcp_req.inspect_delay)
-					req->analyse_exp = tick_add_ifset(now_ms, s->be->tcp_req.inspect_delay);
+					req->analyse_exp = tick_add(now_ms, s->be->tcp_req.inspect_delay);
 				return 0;
 			}
 
@@ -1015,7 +1015,7 @@ int tcp_inspect_response(struct session *s, struct channel *rep, int an_bit)
 			if (ret == ACL_PAT_MISS) {
 				/* just set the analyser timeout once at the beginning of the response */
 				if (!tick_isset(rep->analyse_exp) && s->be->tcp_rep.inspect_delay)
-					rep->analyse_exp = tick_add_ifset(now_ms, s->be->tcp_rep.inspect_delay);
+					rep->analyse_exp = tick_add(now_ms, s->be->tcp_rep.inspect_delay);
 				return 0;
 			}
 
-- 
1.8.1.5

