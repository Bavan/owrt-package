From c10aec299f132aace06920014633674234bfdd2e Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Mon, 14 Oct 2013 19:43:37 +0200
Subject: [PATCH 243/277] MINOR: get rid of si_takeover_conn()

Since last commit, this function is an exact copy of si_prepare_conn().
---
 include/proto/stream_interface.h | 18 +++---------------
 src/session.c                    |  2 +-
 2 files changed, 4 insertions(+), 16 deletions(-)

diff --git a/include/proto/stream_interface.h b/include/proto/stream_interface.h
index 3349dde..1439a03 100644
--- a/include/proto/stream_interface.h
+++ b/include/proto/stream_interface.h
@@ -54,23 +54,11 @@ static inline void si_prepare_none(struct stream_interface *si)
 }
 
 /* Assign the stream interface's pre-allocated connection to the end point,
- * and initialize the connection's context. This is used for outgoing
- * connections.
- */
-static inline void si_prepare_conn(struct stream_interface *si, const struct protocol *ctrl, const struct xprt_ops *xprt)
-{
-	struct connection *conn = si->conn;
-
-	si->ops = &si_conn_ops;
-	si->end = &conn->obj_type;
-	conn_assign(conn, &si_conn_cb, ctrl, xprt, si);
-}
-
-/* Assign the stream interface's pre-allocated connection to the end point,
  * and leave the connection's context untouched. This is used for incoming
- * connections.
+ * and outgoing connections. The caller is responsible for ensuring that
+ * si->conn already points to the connection.
  */
-static inline void si_takeover_conn(struct stream_interface *si, const struct protocol *ctrl, const struct xprt_ops *xprt)
+static inline void si_prepare_conn(struct stream_interface *si, const struct protocol *ctrl, const struct xprt_ops *xprt)
 {
 	struct connection *conn = si->conn;
 
diff --git a/src/session.c b/src/session.c
index b8b5b49..e509662 100644
--- a/src/session.c
+++ b/src/session.c
@@ -426,7 +426,7 @@ int session_complete(struct session *s)
 
 	/* attach the incoming connection to the stream interface now */
 	s->si[0].conn = conn;
-	si_takeover_conn(&s->si[0], l->proto, l->xprt);
+	si_prepare_conn(&s->si[0], l->proto, l->xprt);
 
 	s->flags |= SN_INITIALIZED;
 	s->unique_id = NULL;
-- 
1.8.1.5

