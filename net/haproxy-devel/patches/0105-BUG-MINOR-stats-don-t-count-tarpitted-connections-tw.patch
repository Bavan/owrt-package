From 8ac72496113dca34f5a49c6ac9a2cc80f5612f69 Mon Sep 17 00:00:00 2001
From: Willy Tarreau <w@1wt.eu>
Date: Sat, 16 Nov 2013 10:06:44 +0100
Subject: [PATCH 105/179] BUG/MINOR: stats: don't count tarpitted connections
 twice

When a connection is tarpitted, a denied req is counted once when the
action is applied, and then a failed req is counted when the tarpit
timeout expires. This is completely wrong as the tarpit is exactly
equivalent to a deny since it's a disguised deny.

So let's not increment the failed req anymore.

This fix may be backported to 1.4 which has the same issue.
---
 src/proto_http.c | 4 ----
 1 file changed, 4 deletions(-)

diff --git a/src/proto_http.c b/src/proto_http.c
index 831eeeb..ce41362 100644
--- a/src/proto_http.c
+++ b/src/proto_http.c
@@ -4209,10 +4209,6 @@ int http_process_tarpit(struct session *s, struct channel *req, int an_bit)
 	req->analysers = 0;
 	req->analyse_exp = TICK_ETERNITY;
 
-	s->fe->fe_counters.failed_req++;
-	if (s->listener->counters)
-		s->listener->counters->failed_req++;
-
 	if (!(s->flags & SN_ERR_MASK))
 		s->flags |= SN_ERR_PRXCOND;
 	if (!(s->flags & SN_FINST_MASK))
-- 
1.8.1.5

